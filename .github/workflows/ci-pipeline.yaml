name: Java CI

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [17]
    env:
      MAVEN_OPTS: "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED"

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}

      # Cache Maven dependencies
      - name: Cache Maven local repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build and run tests
      - name: Build with Maven
        run: mvn clean install -B -V

      - name: Generate JaCoCo Test Report
        run: mvn verify

      - name: Upload JaCoCo HTML Reports
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: |
            ./core/target/site/jacoco/

      # Optional: Check license headers with Spotless
      - name: Check code formatting / license headers
        run: mvn spotless:check

      - name: Generate Build Number
        id: build-number
        run: |
          BUILD_NUMBER=$(date '+%Y%m%d%H%M%S')
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build & Push spring-cloud-config-starter-example image
      - name: Build & Push Config Starter Docker Image
        run: |
          cd examples/spring-cloud-config-starter-example
          mvn compile jib:build \
              -Pbuild-and-push-docker-image \
              -Dapp.image.tag=${{ env.BUILD_NUMBER }}

      # Build & Push spring-cloud-config-server image
      - name: Build & Push Config Server Docker Image
        run: |
          cd examples/spring-cloud-config-server
          mvn compile jib:build \
            -Pbuild-and-push-docker-image \
            -Dapp.image.tag=${{ env.BUILD_NUMBER }}